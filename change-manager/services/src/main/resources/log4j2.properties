status=warn
name=HCDC
# Log files location
property.basePath=C:/Work/temp/logs/hcdc
appender.console.type=Console
appender.console.name=STDOUT
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%c] [%M] [%l] - %msg%n
# appender.console.layout.pattern="%style{%d{ISO8601}}{black} %highlight{%-5level }[%style{%t}{bright,blue}] %style{%C{1.}}{bright,yellow}: %msg%n%throwable"
# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type=RollingFile
appender.rolling.name=ROLLING
appender.rolling.fileName=${basePath}/hcdc-services.log
appender.rolling.filePattern=${basePath}/hcdc-services.%d{yyyyMMdd}.log.gz
appender.rolling.layout.type=PatternLayout
appender.rolling.layout.pattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%l] - %msg%n
appender.rolling.policies.type=Policies
# RollingFileAppender rotation policy
appender.rolling.policies.size.type=SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=10MB
appender.rolling.policies.time.type=TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval=1
appender.rolling.policies.time.modulate=true
appender.rolling.strategy.type=DefaultRolloverStrategy
appender.rolling.strategy.delete.type=Delete
appender.rolling.strategy.delete.basePath=${basePath}
appender.rolling.strategy.delete.maxDepth=10
appender.rolling.strategy.delete.ifLastModified.type=IfLastModified
# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age=30d

loggers=service
logger.service.name=ai.sapper.hcdc
logger.service.level=debug
logger.service.appenderRefs=rolling
logger.service.appenderRef.rolling.ref=ROLLING
logger.service.additivity=false
# Configure root logger
rootLogger.level=info
rootLogger.appenderRefs=stdout
rootLogger.appenderRef.stdout.ref=STDOUT