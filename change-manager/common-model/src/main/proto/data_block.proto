syntax = "proto2";

package ai_sapper_hcdc_common_model;

option java_multiple_files = true;
option java_package = "ai.sapper.hcdc.common.model";
option java_outer_classname = "DFSBlockProto";

message DFSTransaction {
  enum Operation {
    ADD_FILE = 0;
    ADD_BLOCK = 1;
    CLOSE = 2;
    RENAME = 3;
    CONCAT_DELETE = 4;
    UPDATE_BLOCKS = 5;
    DELETE = 6;
    APPEND = 7;
    TRUNCATE = 8;
    IGNORE = 9;
    ERROR = 10;
  }
  required int64 transactionId = 1;
  required Operation op = 2;
  required uint64 timestamp = 3;
}

message DFSFile {
  required string namespace = 1;
  required string path = 2;
  required int64 inodeId = 3;
  optional string fileType = 4;
  optional string schemaLocation = 5;
}

message DFSBlock {
  required int64 blockId = 1;
  required int64 size = 2;
  required int64 blockSize = 3;
  required int64 generationStamp = 4;
  required int64 startOffset = 5;
  required int64 endOffset = 6;
  optional int64 deltaSize = 7;
  optional bool  deleted = 8;
}

message DFSAddFile {
  required DFSTransaction transaction = 1;
  required DFSFile file = 2;
  required uint64 length = 3;
  required uint64 blockSize = 4;
  required uint64 modifiedTime = 5;
  required uint64 accessedTime = 6;
  repeated DFSBlock blocks = 7;
  optional bool overwrite = 8;
}

message DFSAppendFile {
  required DFSTransaction transaction = 1;
  required DFSFile file = 2;
  optional bool newBlock = 3;
}

message DFSDeleteFile {
  required DFSTransaction transaction = 1;
  required DFSFile file = 2;
  required uint64 timestamp = 3;
}

message DFSAddBlock {
  required DFSTransaction transaction = 1;
  required DFSFile file = 2;
  optional DFSBlock penultimateBlock = 3;
  required DFSBlock lastBlock = 4;
}

message DFSUpdateBlocks {
  required DFSTransaction transaction = 1;
  required DFSFile file = 2;
  repeated DFSBlock blocks = 3;
}

message DFSTruncateBlock {
  required DFSTransaction transaction = 1;
  required DFSFile file = 2;
  required DFSBlock block = 3;
  required uint64 newLength = 4;
}

message DFSCloseFile {
  required DFSTransaction transaction = 1;
  required DFSFile file = 2;
  required uint64 length = 3;
  required uint64 blockSize = 4;
  required uint64 modifiedTime = 5;
  required uint64 accessedTime = 6;
  repeated DFSBlock blocks = 7;
  optional bool overwrite = 8;
}

message DFSRenameFile {
  enum RenameOpts {
    NONE = 0;
    OVERWRITE = 1;
    TO_TRASH = 2;
  }
  required DFSTransaction transaction = 1;
  required DFSFile srcFile = 2;
  required DFSFile destFile = 3;
  required uint64 length = 4;
  optional RenameOpts opts = 5;
}

message DFSIgnoreTx {
  required DFSTransaction transaction = 1;
  required string opCode = 2;
  optional DFSFile file = 3;
}

message DFSError {
  enum ErrorCode {
    SYNC_STOPPED = 0;
    FATAL = 1;
  }
  required DFSTransaction transaction = 1;
  required ErrorCode code = 2;
  required string message = 3;
  optional DFSFile file = 4;
}

message DFSChangeData {
  enum FileSystemCode {
    LOCAL = 0;
    S3 = 1;
  }
  required DFSTransaction transaction = 1;
  required DFSFile file = 2;
  required string domain = 3;
  required string entityName = 4;
  required FileSystemCode fileSystem = 5;
  required string outputPath = 6;
}

message DFSSchema {
  required string domain = 1;
  required string entity = 2;
  optional string group = 3;
}

message DFSSchemaChange {
  required DFSTransaction transaction = 1;
  required DFSFile file = 2;
  required DFSSchema schema = 3;
  required int32 op = 4;
  optional string currentSchema = 5;
  required string updatedSchema = 6;
}


message DFSChangeDelta {
  required string namespace = 1;
  required string txId = 2;
  required int64 sequence = 3;
  required string entity = 4;
  required string type = 5;
  required uint64 timestamp = 6;
  required bytes body = 7;
  optional DFSSchema schema = 8;
}

